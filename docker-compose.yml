version: '3.9'

volumes:
  db:
    driver: local

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    healthcheck:
      test: [ "CMD-SHELL", "echo stat | nc -w 2 localhost 2181" ]
      interval: 10s
      timeout: 5s
      retries: 10

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: DOCKER://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      
  postgres:
    image: postgres:16.3
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "root"
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data

  producer:
    container_name: producer
    ports:
      - "8080:8080"
    build: MetricProducer/
    depends_on:
      kafka:
        condition: service_started

  consumer:
    container_name: consumer
    ports:
      - "8081:8081"
    build: MetricConsumer/
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_started
      producer:
        condition: service_started
       


